{
  "name": "base.second.cloud.services.second.default.streaming_update",
  "type": "types.second.default.service.js",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--Service --', SELF.name, '--');\n      \n      let {\n        streamId,\n        sliceStart,\n        sliceEnd\n      } = INPUT.data;\n      \n      sliceStart = sliceStart === undefined ? 0:sliceStart\n      \n      let streamingResponse = universe.sharedServices.streaming_responses[streamId];\n      if(!streamingResponse){\n        return resolve({\n          type: 'error',\n          data: {\n            error: true,\n            message: 'No streaming response'\n          }\n        });\n      }\n      \n      let streamArrResult = streamingResponse.slice(sliceStart, sliceEnd);\n      \n      return resolve({\n        type: 'streaming_array',\n        data: streamArrResult\n      });\n        \n        \n    }catch(err){\n      universe.scriptError(err, SELF);\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  },
  "blobdata": null,
  "createdAt": "2019-04-03T21:35:08.551Z",
  "updatedAt": "2019-04-07T06:39:50.856Z",
  "nodes": []
}