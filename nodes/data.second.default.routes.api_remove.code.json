{
  "type": "types.second.default.code.js",
  "name": "data.second.default.routes.api_remove.code",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--incoming_route_handler: /api/remove (for a path) --');\n      \n      let bodyNode = INPUT.data.req.body;\n      \n  \t\t// expecting a valid name \n  \t\t\n  \t\tif(!bodyNode.name){\n  \t\t  console.error('Missing name in body for node');\n        await universe.httpResponse('send', false);\n  \t\t  return false;\n  \t\t}\n  \t\t\n      let opts = bodyNode.opts || {};\n        \n      console.log('removeNodeAtPath', bodyNode.name);\n      let result = await universe.removeNodeAtPath(bodyNode.name, opts);\n      \n      console.log('Result of removeNodeAtPath', result);\n      \n      let secondResponseNode = {\n        type: 'types.second.default.response',\n        data: {\n          result\n        }\n      }\n      \n      await universe.httpResponse('send', secondResponseNode);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}