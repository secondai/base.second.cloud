{
  "name": "base.second.cloud.services.second.default.startup.identity",
  "type": "types.second.default.service.js",
  "data": {
    "key": "caa31b79-0ffc-417a-b7cc-9ed5d61332a6",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n  \n      console.log('--service:', SELF.name, '--', PATH, AUTH);\n      \n      // Create \"owner\" node if doesn't already exist \n      let ownerNode = await universe.getNodeAtPath('private.auth.owner');\n      if(!ownerNode){\n        console.log('Owner node does NOT exist, creating');\n        await universe.putNodeAtPath('private.auth.owner',{\n          type: 'types.second.default.auth.owner',\n          data: {\n            passphrase: universe.env.DEFAULT_PASSPHRASE\n          }\n        });\n        console.log('Created owner node w/ default passphrase');\n        ownerNode = await universe.getNodeAtPath('private.auth.owner');\n      }\n      \n      \n      // let identityNode = await universe.getNodeAtPath('private.identity.owner');\n      // if(!identityNode){\n      //   console.log('Identity node does NOT exist, creating private.identity.owner');\n        \n      //   // var key = new universe.rsa({b: 512});\n      //   // key.generateKeyPair(512, 65537); // 2048\n        \n      //   // let keypair = {\n      //   //   private: key.exportKey('pkcs8-private-pem'), \n      //   //   public: key.exportKey('pkcs8-public-pem'),\n      //   // }\n        \n      //   await universe.putNodeAtPath('private.identity.owner',{\n      //     type: 'types.second.default.identity.owner',\n      //     data: {\n      //       username: null, // will be filled in with Second username (xyz, test:xyz)\n      //       privateKey: null, //keypair.private,\n      //       publicKey: null, //keypair.public,\n      //       addresses: [{\n      //         type: 'http_second',\n      //         data: {\n      //           root: universe.env.DEFAULT_SUBDOMAIN, // http://mysecond.xyz.com/ai\n      //           ai: universe.env.DEFAULT_SUBDOMAIN + '/ai' // http://mysecond.xyz.com/ai\n      //         }\n      //       }]\n      //     }\n      //   });\n      //   console.log('Created owner node w/ default passphrase');\n      //   identityNode = await universe.getNodeAtPath('private.identity.owner');\n      // }\n      \n      return resolve({\n        type: 'boolean:...',\n        data: true\n      });\n      \n        \n    }catch(err){\n      console.error(err);\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  },
  "blobdata": null,
  "createdAt": "2019-04-03T21:35:08.609Z",
  "updatedAt": "2019-04-03T21:35:08.609Z",
  "nodes": []
}