{
  "name": "base.second.cloud.data.second.default.routes.api_export.code",
  "type": "types.second.default.code.js",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--API service pass-thru: --', SELF.name);\n      \n      const util = universe.require('util');\n      const path = universe.require('path');\n      let fs = universe.require('fs-extra');\n      let pathToRegExp = universe.require('path-to-regexp');\n      \n      \n      \n      // This is just temporary! \n      let {\n        req,\n        res\n      } = INPUT.data;\n      \n      function matchRoute(route){\n        let keys = [];\n        let re = pathToRegExp(route, keys)\n        let matches = re.exec(req.originalUrl)\n        if(!matches){\n          return null;\n        }\n        let params = {};\n        keys.forEach((key, i)=>{\n          params[key.name] = matches[i + 1];\n        });\n        return {\n          route,\n          params\n        };\n      }\n      \n      let routePath;\n      let routeMatch;\n      \n      var \n        nodePath,\n        node;\n           \n      // Service to run against \n      // - \n      routePath = '/api/service/:servicePath/:nodePath';\n      routeMatch = matchRoute(routePath);\n      if(routeMatch){\n        var {nodePath, selfOrOther} = routeMatch.params;\n  \t\t\tlet exportResultNode = await universe.execService('services.second.default.capability.export_to_github', {\n  \t\t\t  actionPath: 'builtin-input',\n  \t\t\t  inputNode: {\n  \t\t\t    type: 'types.second.default.bin.install.input',\n  \t\t\t    data: {\n  \t\t\t      nodePath,\n  \t\t\t      target: selfOrOther,\n  \t\t\t      opts: {}\n  \t\t\t    }\n  \t\t\t  },\n  \t\t\t\tisOwner: true\n  \t\t\t});\n  \t\t\t\n  \t\t\tres.send(exportResultNode);\n  \t\t\treturn;\n      }\n      \n      return res.status(404).send(false);\n      \n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      universe.scriptError(err, SELF);\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  },
  "blobdata": null,
  "createdAt": "2019-03-16T02:18:54.345Z",
  "updatedAt": "2019-03-19T18:42:30.465Z",
  "nodes": []
}