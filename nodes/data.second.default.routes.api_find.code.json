{
  "name": "base.second.cloud.data.second.default.routes.api_find.code",
  "type": "types.second.default.code.js",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--incoming_route_handler: --', SELF.name);\n      \n      // This is just temporary! \n      let {\n        req,\n        res\n      } = INPUT.data;\n      \n      let bodyNode = req.body;\n      let opts = bodyNode.data.opts || {};\n      \n      console.log('bodyNode:', bodyNode);\n      \n      if(bodyNode.type != 'types.second.default.api_find'){\n        console.error('Invalid type of input req.body');\n        res.send({type:'types.second.default.error',message: 'Invalid type of input req.body (expected \"types.second.default.api_find\" got \"'+bodyNode.type+'\"'});\n        return reject(false);\n      }\n      \n\t\t  const Op = universe.sharedServices.db.Sequelize.Op;\n\t\t  \n\t\t  // // Fix 'where' to include regex on name (Sequelize Operator Aliases, should be disabled by default)\n\t\t  // function updateKeys(obj) {\n    //     for(var key in obj) {\n    //       if(key == '$regex'){\n    //       } else if(typeof obj[key] === \"object\") {\n    //         var subkeys = updateKeys(obj[key]);\n    //         keys = keys.concat(subkeys.map(function(subkey) {\n    //           return key + \".\" + subkey;\n    //         }));\n    //       }\n    //     }\n    //   }\n\t\t  \n\t\t  let nodes = await universe.sharedServices.db.Node.findAll({\n\t\t    where: bodyNode.data.where,\n\t\t    // {\n\t\t    //   name: {\n\t\t    //     $regexp: '^app\\\\.second\\\\.sample_pwa\\\\.static\\\\.[-\\\\w]+$'\n\t\t    //   }\n\t\t    // }, \n\t\t    raw: true,\n\t\t    // operatorsAliases: { $regex: Op.regex } \n\t\t  });\n\t\t  \n\t\t  // TODO: check permissions \n\t\t  \n      res.send(nodes);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      universe.scriptError(err, SELF);\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  },
  "blobdata": null,
  "createdAt": "2019-03-27T08:23:10.907Z",
  "updatedAt": "2019-04-06T03:55:22.922Z",
  "nodes": []
}