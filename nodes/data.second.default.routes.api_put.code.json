{
  "name": "base.second.cloud.data.second.default.routes.api_put.code",
  "type": "types.second.default.code.js",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--incoming_route_handler: /put (for a path) --');\n      \n      let {\n        req, \n        res\n      } = INPUT.data;\n      \n      let bodyNode = req.body;\n\n  \t\t// expecting a valid _path \n  \t\t\n  \t\tif(!bodyNode.name){\n  \t\t  console.error('Missing name in body for node');\n        await universe.httpResponse('send', false);\n  \t\t  return false;\n  \t\t}\n  \t\t\n  \t\t// File upload or body as json? \n  \t\tif(req.files && Object.keys(req.files).length){\n  \t\t  console.log('FILE Upload:',req.files);\n  \t\t}\n      // INPUT.data.req\n      // let uploadFile = req.files.file\n      // const fileName = req.files.file.name\n      // uploadFile.mv(\n      //   `${__dirname}/public/files/${fileName}`,\n      //   function (err) {\n      //     if (err) {\n      //       return res.status(500).send(err)\n      //     }\n    \n      //     res.json({\n      //       file: `public/${req.files.file.name}`,\n      //     })\n      //   },\n      // )\n  \t\t\n  \t\tlet node = {\n  \t\t  type: bodyNode.type,\n  \t\t  data: bodyNode.data,\n  \t\t}\n      \n      let opts = {};\n      let key;\n        \n      // console.log('putNodeAtPath', bodyNode.name, node);\n      let result = await universe.putNodeAtPath(bodyNode.name, node, key, opts);\n      \n      // console.log('Result of saving putNodeAtPath (new node w/ _id)', result);\n      \n      let secondResponseNode = {\n        type: 'types.second.default.response',\n        data: {\n          result\n        }\n      }\n      \n      await universe.httpResponse('send', secondResponseNode);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      console.error('err');\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  },
  "blobdata": null,
  "createdAt": "2019-03-05T22:38:13.373Z",
  "updatedAt": "2019-03-16T02:18:53.743Z",
  "nodes": []
}